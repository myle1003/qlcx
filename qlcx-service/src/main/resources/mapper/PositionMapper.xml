<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qlcx.system.mapper.PositionMapper">
    
    <resultMap type="Position" id="PositionResult">
        <result property="id"    column="id"    />
        <result property="name"    column="name"    />
        <result property="description"    column="description"    />
    </resultMap>

    <sql id="selectPositionVo">
        select id, name, description from position
    </sql>

    <select id="selectPositionList" parameterType="Position" resultMap="PositionResult">
        <include refid="selectPositionVo"/>
        <where>  
            <if test="name != null and name != '' "> and name like concat('%', #{name}, '%')</if>
            <if test="description != null and description != '' "> and description = #{description}</if>
        </where>
    </select>
    
    <select id="selectPositionById" parameterType="Long" resultMap="PositionResult">
        <include refid="selectPositionVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertPosition" parameterType="Position" useGeneratedKeys="true" keyProperty="id">
        insert into position
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null and name != '' ">name,</if>
            <if test="description != null and description !=''">description,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null and name != '' ">#{name},</if>
            <if test="description != null and description !='' ">#{description},</if>
         </trim>
    </insert>

    <update id="updatePosition" parameterType="Position">
        update position
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="description != null and description !='' ">description = #{description},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deletePositionById" parameterType="Long">
        delete from position where id = #{id}
    </delete>

    <delete id="deletePositionByIds" parameterType="String">
        delete from position where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    
</mapper>